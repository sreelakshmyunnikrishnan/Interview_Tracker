# Generated by Django 3.2.3 on 2021-08-26 18:04

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usertype', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_name', models.CharField(max_length=20)),
                ('note_content', models.TextField(max_length=128)),
                ('note_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'note_taker',
            },
        ),
        migrations.CreateModel(
            name='AddInt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Company Name')),
                ('c_url', models.CharField(blank=True, max_length=30, null=True, verbose_name='Company URL')),
                ('c_contact', models.IntegerField(blank=True, null=True, verbose_name='Company Contact')),
                ('c_post', models.CharField(blank=True, max_length=40, null=True, verbose_name='Post Applied')),
                ('c_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Company Email')),
                ('date_applied', models.DateField(blank=True, null=True)),
                ('scd_date', models.DateField(blank=True, null=True)),
                ('rec_called', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True, verbose_name='Did the Reruiter Call')),
                ('int_rounds_cleared', models.IntegerField(blank=True, null=True, verbose_name='Interview Rounds Cleared')),
                ('que_asked', models.TextField(blank=True, max_length=50, null=True, verbose_name='Questions Asked')),
                ('self_analysis', models.TextField(blank=True, max_length=50, null=True, verbose_name='Self Analysis')),
                ('resp_status', models.CharField(blank=True, choices=[('Selected', 'Selected'), ('Selected for Next Round', 'Selected for Next Round'), ('Rejected', 'Rejected'), ('No Update', 'No Update')], max_length=30, null=True, verbose_name='Response Status')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'interview_tracker',
            },
        ),
    ]
